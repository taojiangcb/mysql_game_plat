"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const PlatFactory_1 = require("../plats/PlatFactory");
function login(ctx, next) {
    return __awaiter(this, void 0, void 0, function* () {
        console.log("the call login function");
        var body = ctx.request.body; //接收post 请求参数
        var platServer = yield PlatFactory_1.platFactory.getInstance(body.plat);
        if (platServer) {
            ctx.response.body = yield platServer.login(body);
        }
        //console.log(body);
        //return ctx.response.body = body;
    });
}
function login_get(ctx, netx) {
    return __awaiter(this, void 0, void 0, function* () {
        console.log("the call login_get function");
        var query = ctx.request.querty; //接收get 请求参数
        console.log(query);
        //返回
        return ctx.response.body = query;
    });
}
/**
 * 导出接口
 */
module.exports = {
    'POST /login/login': login,
    'GET /login/login_get': login_get
};
//# sourceMappingURL=LoginServer.js.map