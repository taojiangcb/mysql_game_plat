"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const md5Hex = require("md5-hex");
const uuidv1 = require("uuidv1");
const moment = require("moment");
const iProtocol_1 = require("../iProtocol");
const RedisCfg_1 = require("../redis/RedisCfg");
class PlatBaseServer {
    constructor() { }
    ;
    login(param) {
        return __awaiter(this, void 0, void 0, function* () {
            return null;
        });
    }
    /**
     * 到平台获取签权信息
     */
    getSignaData() {
        return __awaiter(this, void 0, void 0, function* () {
        });
    }
    /**
     * 生成平台id
     */
    generateId() {
        return md5Hex("plat_" + uuidv1() + moment().format("YYYYMMDDHmmss"));
    }
    /**
     * 生成平台token
     */
    generateToken() {
        return md5Hex("token_" + uuidv1() + moment().format("YYYYMMDDHmmss"));
    }
    mToken(zxId) {
        return __awaiter(this, void 0, void 0, function* () {
            var token = this.generateToken();
            yield RedisCfg_1.redistInst.setStringSync(iProtocol_1.Constant.REDIS_TOKEN + zxId, token);
            yield RedisCfg_1.redistInst.setExpire(iProtocol_1.Constant.REDIS_TOKEN + zxId, 24 * 60 * 60);
            return token;
        });
    }
    static getToken(zxId) {
        return __awaiter(this, void 0, void 0, function* () {
            var token = yield RedisCfg_1.redistInst.getStringSync(iProtocol_1.Constant.REDIS_TOKEN + zxId);
            return token;
        });
    }
}
exports.PlatBaseServer = PlatBaseServer;
//# sourceMappingURL=PlatBase.js.map